{"version":3,"file":"static/js/343.28e7099b.chunk.js","mappings":"sRACMA,EAAU,mCAEHC,EAAW,mCAAG,+GAEAC,EAAAA,EAAAA,IAAA,kEACsCF,IAHtC,cAEjBG,EAFiB,OAKjBC,EAAeD,EAASE,KAAKC,QALZ,kBAMhBF,GANgB,gCAQvBG,QAAQC,IAAR,MARuB,yDAAH,qDAYXC,EAAc,mCAAG,WAAMC,GAAN,kGAEHR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,oBACoCV,IAHjC,cAEpBG,EAFoB,OAKpBC,EAAeD,EAASE,KALJ,kBAMnBD,GANmB,gCAQ1BG,QAAQC,IAAR,MAR0B,yDAAH,sDAYdG,EAAa,mCAAG,WAAOD,EAASE,GAAhB,kGAEFV,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,YAC4BE,EAD5B,oBAC6CZ,IAH3C,cAEnBG,EAFmB,OAKnBC,EAAeD,EAASE,KALL,kBAMlBD,GANkB,gCAQzBG,QAAQC,IAAR,MARyB,yDAAH,wDAYbK,EAAkB,mCAAG,WAAMC,GAAN,gGAEPZ,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACiDc,EADjD,gCAFO,cAExBX,EAFwB,yBAKvBA,EAASE,KAAKC,SALS,gCAO9BC,QAAQC,IAAR,MAP8B,yDAAH,qD,8ICrClBO,EAAW,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACzB,OACE,8BACGA,IACC,wBACGA,EAAUC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACb,2BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAClC,4EAENI,IAAI,cACJC,MAAM,SAER,uBAAIJ,KACJ,4CAAkBC,OAXXH,EADI,OAmBxB,ECAD,EApBa,WACX,OAAkCO,EAAAA,EAAAA,UAAS,IAA3C,eAAOT,EAAP,KAAkBU,EAAlB,KACQhB,GAAYiB,EAAAA,EAAAA,MAAZjB,QAWR,OATAkB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,qGACAlB,EAAAA,EAAAA,IAAcD,EAAS,WADvB,OACboB,EADa,OAEnBJ,EAAaI,GAFM,2CAAH,qDAIlBD,GACD,GAAE,CAACnB,KAIF,yBACGM,EAAUc,OAAQ,SAACf,EAAD,CAAUC,UAAWA,EAAUc,QAGvD,C","sources":["api/fetchMovies.js","components/CastList/CastList.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'a12b15569070d5f59a588b24befedb0f';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    const responseData = response.data.results;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const responseData = response.data;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieAdd = async (movieId, param) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/${param}?api_key=${API_KEY}`\n    );\n    const responseData = response.data;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import PropTypes from 'prop-types';\n\nexport const CastList = ({ movieCast }) => {\n  return (\n    <>\n      {movieCast && (\n        <ul>\n          {movieCast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w185${profile_path}`\n                    : 'https://nowywilczak.pl/wp-content/uploads/2016/04/default-placeholder.png'\n                }\n                alt=\"unavailable\"\n                width=\"185\"\n              />\n              <p>{name}</p>\n              <p>{`Character: ${character}`}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nCastList.propTypes ={\n  movieCast: PropTypes.array.isRequired,\n}","import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieAdd } from \"api/fetchMovies\";\nimport { CastList } from '../../components/CastList/CastList';\n\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([])\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      const cast = await fetchMovieAdd(movieId, 'credits');\n      setMovieCast(cast);\n    }\n    getMovieCast();\n  }, [movieId]);\n\n\n  return (\n    <div>\n      {movieCast.cast && <CastList movieCast={movieCast.cast}/>}      \n    </div>\n  );\n};\n\nexport default Cast"],"names":["API_KEY","fetchMovies","axios","response","responseData","data","results","console","log","fetchMovieById","movieId","fetchMovieAdd","param","fetchMoviesByQuery","query","CastList","movieCast","map","id","profile_path","name","character","src","alt","width","useState","setMovieCast","useParams","useEffect","getMovieCast","cast"],"sourceRoot":""}
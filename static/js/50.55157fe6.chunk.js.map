{"version":3,"file":"static/js/50.55157fe6.chunk.js","mappings":"qRACMA,EAAU,mCAEHC,EAAW,mCAAG,+GAEAC,EAAAA,EAAAA,IAAA,kEACsCF,IAHtC,cAEjBG,EAFiB,OAKjBC,EAAeD,EAASE,KAAKC,QALZ,kBAMhBF,GANgB,gCAQvBG,QAAQC,IAAR,MARuB,yDAAH,qDAYXC,EAAc,mCAAG,WAAMC,GAAN,kGAEHR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,oBACoCV,IAHjC,cAEpBG,EAFoB,OAKpBC,EAAeD,EAASE,KALJ,kBAMnBD,GANmB,gCAQ1BG,QAAQC,IAAR,MAR0B,yDAAH,sDAYdG,EAAa,mCAAG,WAAOD,EAASE,GAAhB,kGAEFV,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,YAC4BE,EAD5B,oBAC6CZ,IAH3C,cAEnBG,EAFmB,OAKnBC,EAAeD,EAASE,KALL,kBAMlBD,GANkB,gCAQzBG,QAAQC,IAAR,MARyB,yDAAH,wDAYbK,EAAkB,mCAAG,WAAMC,GAAN,gGAEPZ,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACiDc,EADjD,gCAFO,cAExBX,EAFwB,yBAKvBA,EAASE,KAAKC,SALS,gCAO9BC,QAAQC,IAAR,MAP8B,yDAAH,qD,kKCrClBO,EAAQC,EAAAA,GAAAA,MAAH,kUAgBLC,EAAYD,EAAAA,GAAAA,OAAH,mf,SCuCtB,EAnDmB,WACjB,IAAME,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoDL,EAAAA,EAAAA,UAAS,IAA7D,eAAOM,EAAP,KAA2BC,EAA3B,KAyBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,GAAqB,KAAjBJ,EAAJ,CAEA,IAAMK,EAAe,mCAAG,2FAChBC,EAAcN,EAAaO,IAAI,UADf,iCAGOlB,EAAAA,EAAAA,IAAmBiB,GAH1B,OAGdE,EAHc,OAIpBL,EAAsBK,GAJF,2CAAH,qDAOrBH,GAT+B,CAUhC,GAAE,CAACL,KAGF,4BACE,kBAAMS,SArBe,SAAAC,GACvBA,EAAEC,iBACYV,EAAdJ,EAA8B,CAAEP,MAAOO,GAAiC,IACxEC,EAAe,GAChB,EAiBG,WACE,SAACP,EAAD,CAAOqB,KAAK,OAAOC,MAAOhB,EAAaiB,SA1BpB,SAAAJ,GACvBZ,EAAeY,EAAEK,OAAOF,MACzB,KAyBK,SAACpB,EAAD,yBAGF,0BACGS,EAAmBc,KAAI,SAAAC,GAAK,OAC3B,yBACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM3B,GAAhD,UACE,wBAAKuB,EAAMK,aAHRL,EAAME,GADY,QAYpC,C","sources":["api/fetchMovies.js","pages/MoviesPage/MoviePage.styled.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'a12b15569070d5f59a588b24befedb0f';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    const responseData = response.data.results;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const responseData = response.data;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieAdd = async (movieId, param) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/${param}?api_key=${API_KEY}`\n    );\n    const responseData = response.data;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 280px;\n  height: 30px;\n  margin-top: 5px;\n  border: 2px solid rgba(188, 184, 184, 0.989);\n  padding-left: 20px;\n  outline: none;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus,\n  &:hover {\n    border: 2px solid rgb(75, 62, 142);\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 36px;\n  color: black;\n  border: 2px solid rgba(188, 184, 184, 0.989);\n  background-color: transparent;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    color: white;\n    background-color: rgb(75, 62, 142);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'api/fetchMovies';\nimport { Input, SearchBtn } from './MoviePage.styled';\n\nconst MoviesPage = () => {\n  const location = useLocation();\n  const [querySearch, setQuerySearch] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovieByQuery, setSearchMovieByQuery] = useState([]);\n\n  const querySearchValue = e => {\n    setQuerySearch(e.target.value);\n  };\n\n  const submitQueryValue = e => {\n    e.preventDefault();\n    querySearch ? setSearchParams({ query: querySearch }) : setSearchParams('');\n    setQuerySearch('');\n  };\n\n  useEffect(() => {\n    if (searchParams === '') return;\n\n    const getMovieByQuery = async () => {\n      const searchMovie = searchParams.get('query');\n      if (searchMovie) {\n        const movieByQuery = await fetchMoviesByQuery(searchMovie);\n        setSearchMovieByQuery(movieByQuery);\n      }\n    };\n    getMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={submitQueryValue}>\n        <Input type=\"text\" value={querySearch} onChange={querySearchValue} />\n        <SearchBtn>Search</SearchBtn>\n      </form>\n\n      <main>\n        {searchMovieByQuery.map(movie => (\n          <ul key={movie.id}>\n            <li>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <h4>{movie.title}</h4>\n              </Link>\n            </li>\n          </ul>\n        ))}\n      </main>\n    </div>\n  );\n};\n\nexport default MoviesPage"],"names":["API_KEY","fetchMovies","axios","response","responseData","data","results","console","log","fetchMovieById","movieId","fetchMovieAdd","param","fetchMoviesByQuery","query","Input","styled","SearchBtn","location","useLocation","useState","querySearch","setQuerySearch","useSearchParams","searchParams","setSearchParams","searchMovieByQuery","setSearchMovieByQuery","useEffect","getMovieByQuery","searchMovie","get","movieByQuery","onSubmit","e","preventDefault","type","value","onChange","target","map","movie","to","id","state","from","title"],"sourceRoot":""}